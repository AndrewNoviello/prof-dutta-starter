filepath,testclass,testname,assertion type,line number,assert string
./projects/botorch\botorch\utils\testing.py,SyntheticTestFunctionTestCaseMixin_class,test_optimizer,assertAllClose,210,"self.assertAllClose(res, res_exp, atol=1e-3, rtol=1e-3)"
./projects/botorch\test\test_fit.py,TestFitFallback_class,test_pick_best_of_all_attempts,assertAllClose,358,"self.assertAllClose(val, best_state_dict[key])"
./projects/botorch\test\acquisition\test_active_learning.py,TestQNegIntegratedPosteriorVariance_class,test_q_neg_int_post_variance,assertAllClose,102,"self.assertAllClose(val, -0.5 * variance.mean(), atol=1e-4)"
./projects/botorch\test\acquisition\test_active_learning.py,TestQNegIntegratedPosteriorVariance_class,test_q_neg_int_post_variance,assertAllClose,109,"self.assertAllClose(val, -variance.mean(0), atol=1e-4)"
./projects/botorch\test\acquisition\test_active_learning.py,TestQNegIntegratedPosteriorVariance_class,test_q_neg_int_post_variance,assertAllClose,61,"self.assertAllClose(val, -(variance.mean()), atol=1e-4)"
./projects/botorch\test\acquisition\test_active_learning.py,TestQNegIntegratedPosteriorVariance_class,test_q_neg_int_post_variance,assertAllClose,79,"self.assertAllClose(val, val_exp, atol=1e-4)"
./projects/botorch\test\acquisition\test_active_learning.py,TestQNegIntegratedPosteriorVariance_class,test_q_neg_int_post_variance,assertAllClose,133,"self.assertAllClose(val, val_exp, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,115,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,116,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,124,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,125,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,144,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,145,"self.assertAllClose(log_ei(X), ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,163,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,164,"self.assertAllClose(log_ei(X), ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement,assertAllClose,168,"self.assertAllClose(_log_ei_helper(z), _ei_helper(z).log(), atol=1e-6)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,115,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,116,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,124,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,125,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,144,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,145,"self.assertAllClose(log_ei(X), ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,163,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,164,"self.assertAllClose(log_ei(X), ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement,assertAllClose,168,"self.assertAllClose(_log_ei_helper(z), _ei_helper(z).log(), atol=1e-6)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement_batch,assertAllClose,214,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement_batch,assertAllClose,215,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement_batch,assertAllClose,240,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement_batch,assertAllClose,241,"self.assertAllClose(log_ei(X), ei(X).log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement_batch,assertAllClose,263,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,test_expected_improvement_batch,assertAllClose,264,"self.assertAllClose(log_ei(X), ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement_batch,assertAllClose,214,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement_batch,assertAllClose,215,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement_batch,assertAllClose,240,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement_batch,assertAllClose,241,"self.assertAllClose(log_ei(X), ei(X).log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement_batch,assertAllClose,263,"self.assertAllClose(ei(X), ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestExpectedImprovement_class,_test_expected_improvement_batch,assertAllClose,264,"self.assertAllClose(log_ei(X), ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestPosteriorStandardDeviation_class,test_posterior_stddev_batch,assertAllClose,347,"self.assertAllClose(pm, std.view(-1))"
./projects/botorch\test\acquisition\test_analytic.py,TestProbabilityOfImprovement_class,test_probability_of_improvement,assertAllClose,370,"self.assertAllClose(pi, pi_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestProbabilityOfImprovement_class,test_probability_of_improvement,assertAllClose,371,"self.assertAllClose(log_pi.exp(), pi)"
./projects/botorch\test\acquisition\test_analytic.py,TestProbabilityOfImprovement_class,test_probability_of_improvement,assertAllClose,378,"self.assertAllClose(pi, pi_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestProbabilityOfImprovement_class,test_probability_of_improvement,assertAllClose,379,"self.assertAllClose(log_pi.exp(), pi)"
./projects/botorch\test\acquisition\test_analytic.py,TestProbabilityOfImprovement_class,test_probability_of_improvement_batch,assertAllClose,403,"self.assertAllClose(pi, pi_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestProbabilityOfImprovement_class,test_probability_of_improvement_batch,assertAllClose,404,"self.assertAllClose(log_pi.exp(), pi)"
./projects/botorch\test\acquisition\test_analytic.py,TestUpperConfidenceBound_class,test_upper_confidence_bound,assertAllClose,582,"self.assertAllClose(ucb, ucb_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestUpperConfidenceBound_class,test_upper_confidence_bound,assertAllClose,588,"self.assertAllClose(ucb, ucb_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestUpperConfidenceBound_class,test_upper_confidence_bound_batch,assertAllClose,610,"self.assertAllClose(ucb, ucb_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_log_probability_of_feasibility,assertAllClose,715,"self.assertAllClose(acq_val, log_prob, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_log_probability_of_feasibility,assertAllClose,715,"self.assertAllClose(acq_val, log_prob, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement,assertAllClose,769,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement,assertAllClose,771,"self.assertAllClose(log_ei, ei.log(), atol=1e-5)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement,assertAllClose,828,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement,assertAllClose,831,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement,assertAllClose,847,"self.assertAllClose(ei_min, ei_expected_min, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement,assertAllClose,849,"self.assertAllClose(log_ei_min, ei_min.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement,assertAllClose,778,"self.assertAllClose(log_ei, ei.log(), atol=1e-5)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement,assertAllClose,769,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement,assertAllClose,771,"self.assertAllClose(log_ei, ei.log(), atol=1e-5)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement,assertAllClose,828,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement,assertAllClose,831,"self.assertAllClose(log_ei, ei_expected.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement,assertAllClose,847,"self.assertAllClose(ei_min, ei_expected_min, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement,assertAllClose,849,"self.assertAllClose(log_ei_min, ei_min.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement,assertAllClose,778,"self.assertAllClose(log_ei, ei.log(), atol=1e-5)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement_batch,assertAllClose,893,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,test_constrained_expected_improvement_batch,assertAllClose,894,"self.assertAllClose(log_ei, ei.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement_batch,assertAllClose,893,"self.assertAllClose(ei, ei_expected, atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestConstrainedExpectedImprovement_class,_test_constrained_expected_improvement_batch,assertAllClose,894,"self.assertAllClose(log_ei, ei.log(), atol=1e-4)"
./projects/botorch\test\acquisition\test_analytic.py,TestNoisyExpectedImprovement_class,test_noisy_expected_improvement,assertAllClose,1055,"self.assertAllClose(exp_log_val, val, atol=atol, rtol=rtol)"
./projects/botorch\test\acquisition\test_analytic.py,TestNoisyExpectedImprovement_class,test_noisy_expected_improvement,assertAllClose,1072,"self.assertAllClose(X_test.grad[0], X_test_log.grad[0], atol=atol, rtol=rtol)"
./projects/botorch\test\acquisition\test_analytic.py,TestNoisyExpectedImprovement_class,_test_noisy_expected_improvement,assertAllClose,1055,"self.assertAllClose(exp_log_val, val, atol=atol, rtol=rtol)"
./projects/botorch\test\acquisition\test_analytic.py,TestNoisyExpectedImprovement_class,_test_noisy_expected_improvement,assertAllClose,1072,"self.assertAllClose(X_test.grad[0], X_test_log.grad[0], atol=atol, rtol=rtol)"
./projects/botorch\test\acquisition\test_cost_aware.py,TestCostAwareUtilities_class,test_InverseCostWeightedUtility,assertAllClose,142,"self.assertAllClose(
                    ratios, deltas / multi_output_mean.sum(dim=(-1, -2))
                )"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,105,"self.assertAllClose(qei, qei_ff)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,108,"self.assertAllClose(test_X.grad[..., :-1], test_X_ff.grad)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,34,"self.assertAllClose(qei, qei_ff)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,61,"self.assertAllClose(qei, qei_ff)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,81,"self.assertAllClose(qEI.X_pending, qEI_ff.X_pending)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,92,"self.assertAllClose(qEI.X_pending, X_pending)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,125,"self.assertAllClose(test_X_clone.grad[..., [1]], test_X_ff.grad)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,45,"self.assertAllClose(qei, qei_ff)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,52,"self.assertAllClose(qei, qei_ff)"
./projects/botorch\test\acquisition\test_fixed_feature.py,TestFixedFeatureAcquisitionFunction_class,test_fixed_features,assertAllClose,73,"self.assertAllClose(qei, qei_ff)"
